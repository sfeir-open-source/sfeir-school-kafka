version: '3.7'

services:
  postgres:
    image: postgres:12
    container_name: postgres
    restart: on-failure:3
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./scripts/init-table.sql:/docker-entrypoint-initdb.d/init-table.sql:ro

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    container_name: elasticsearch
    restart: on-failure:3
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    container_name: kibana
    restart: on-failure:3
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    restart: on-failure:3
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
    depends_on:
      - postgres
      - elasticsearch

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    restart: on-failure:3
    environment:
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
    depends_on:
      - zookeeper

  kafka-connect:
    image: confluentinc/cp-kafka-connect:6.2.0
    container_name: kafka-connect
    restart: on-failure:3
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_GROUP_ID: "connect"
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_REST_PORT: 8083
      CONNECT_PLUGIN_PATH: "/usr/share/java,/etc/kafka-connect/jars"
    volumes:
      - ./etc/kafka-connect/jars:/etc/kafka-connect/jars
    ports:
      - "8083:8083"
    depends_on:
      - kafka
